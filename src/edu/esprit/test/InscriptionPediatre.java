/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.esprit.test;

import edu.esprit.util.Connexion;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author AvBack
 */
public class InscriptionPediatre extends javax.swing.JFrame {

    public InscriptionPediatre() {

        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        // Move the window
        this.setLocation(x, y);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        nom = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        certification = new javax.swing.JTextField();
        inscription = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inscription");
        setAutoRequestFocus(false);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Identifiant :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 44, -1, -1));

        jLabel7.setText("Nom :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 82, -1, -1));

        jLabel8.setText("Pr√©nom :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 120, -1, -1));

        jLabel9.setText("Mot de passe :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 158, -1, -1));

        jLabel10.setText("Certification image :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 196, -1, -1));
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 41, 184, -1));
        getContentPane().add(nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 79, 184, -1));
        getContentPane().add(prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 117, 184, -1));
        getContentPane().add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 155, 184, -1));

        certification.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                certificationMouseClicked(evt);
            }
        });
        certification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                certificationActionPerformed(evt);
            }
        });
        getContentPane().add(certification, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 193, 184, -1));

        inscription.setBackground(new java.awt.Color(255, 200, 0));
        inscription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/button.png"))); // NOI18N
        inscription.setText("S'inscrir");
        inscription.setBorder(null);
        inscription.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        inscription.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/AppPackage/button_cliclk.png"))); // NOI18N
        inscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscriptionActionPerformed(evt);
            }
        });
        getContentPane().add(inscription, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 244, 86, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void certificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_certificationActionPerformed
    }//GEN-LAST:event_certificationActionPerformed

    private void certificationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_certificationMouseClicked

        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        path = f.getAbsolutePath();
        certification.setText(path);
        try {
            File image = new File(path);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) {
                bos.write(buf, 0, readNum);
            }
            certification_image = bos.toByteArray();

        } catch (Exception e) {
            System.out.println("erreur");

        }    }//GEN-LAST:event_certificationMouseClicked

    private void inscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inscriptionActionPerformed
        String ident = id.getText();
        String n = nom.getText();
        String p = prenom.getText();
        String pwd = pass.getText();

        Date d = new java.sql.Date(new Date().getYear(), new Date().getMonth(), new Date().getDate());

        try {
            String req1 = "INSERT INTO utilisateur(id_util,nom_util,prenom_util,pwd_util,etat_util,date_desactivation) values('" + ident + "','" + n + "','" + p + "','" + pwd + "','-1','" + d + "')";
            String req2 = "INSERT INTO `pediatre`(`id_ped`,`certification`) values(?,?)";
            PreparedStatement st1 = Connexion.getInstance().prepareStatement(req2);
            Statement st2 = Connexion.getInstance().createStatement();
            st2.executeUpdate(req1);

            st1.setString(1, ident);
            st1.setBytes(2, certification_image);
            st1.execute();
            JOptionPane.showMessageDialog(new JFrame(), "merci");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "erreur");
        }
    }//GEN-LAST:event_inscriptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void InscriptionPediatre(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InscriptionPediatre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InscriptionPediatre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InscriptionPediatre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InscriptionPediatre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                new InscriptionPediatre().setVisible(true);
            }
        });


    }

    public static void main(String[] args) {
        new InscriptionPediatre().setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField certification;
    private javax.swing.JTextField id;
    private javax.swing.JButton inscription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nom;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField prenom;
    // End of variables declaration//GEN-END:variables
    private ImageIcon format = null;
    String path = null;
    byte[] certification_image = null;
}
